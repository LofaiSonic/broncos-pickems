version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: broncos-pickems-db
    environment:
      POSTGRES_DB: broncos_pickems
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/migrations:/docker-entrypoint-initdb.d
    networks:
      - broncos-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: broncos-pickems-redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - broncos-network
    restart: unless-stopped

  # Backend API Server
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: broncos-pickems-backend
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:password123@postgres:5432/broncos_pickems?sslmode=disable
      - JWT_SECRET=your_jwt_secret_key_here_minimum_32_chars
      - REDDIT_CLIENT_ID=rBkjc74Jhi2u7pFWuBlqWA
      - REDDIT_CLIENT_SECRET=YfdhXXw85hTfJKk5nhGj1NNCFv92Gg
      - REDDIT_REDIRECT_URI=http://148.230.83.37:5000/api/auth/reddit/callback
      - REDDIT_USER_AGENT=BroncosPickemsLeague/1.0
      - CLIENT_URL=http://148.230.83.37:3000
      - REDIS_URL=redis://redis:6379
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./server:/app
      - /app/node_modules
    networks:
      - broncos-network
    restart: unless-stopped
    command: npm start

  # Frontend React App
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: broncos-pickems-frontend
    environment:
      - REACT_APP_API_URL=http://148.230.83.37:5000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./client:/app
      - /app/node_modules
    networks:
      - broncos-network
    restart: unless-stopped
    command: npm start

networks:
  broncos-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: